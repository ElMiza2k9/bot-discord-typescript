{
    // Place your área de trabajo de Memz snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    "Generate command base": {
        "scope": "javascript,typescript",
        "prefix": "!cmd",
        "body": [
            "import { Command } from '../../interfaces'",
            "",
            "export const command: Command = {",
            "    data: {",
            "        name: '$1',",
            "        description: 'Comandos $2',",
            "        options: [$3],",
            "        type: '${4:CHAT_INPUT}'",
            "    },",
            "    do: async (client, interaction) => {",
            "        const subcommand = interaction.options['_group']",
            "            ? interaction.options.getSubcommandGroup()",
            "            : interaction.options.getSubcommand()",
            "",
            "        try {",
            "            ;(await import(`./sub/` + subcommand)).default.do(client, interaction)",
            "        } catch (err) {",
            "            const e = client.config.emojis",
            "            const msg = `${e.thong} ¡Ha ocurrido un error!\\nMensaje: ${err.message.split('\\n')[0]}`",
            "",
            "            return interaction.reply(msg)",
            "        }",
            "    }",
            "}"
        ],
        "description": "Genera la base de un comando para el bot"
    }
}
